/*
 * MetaSV API Spec
 * API definition for MetaSV provided apis
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: heqiming@metasv.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.metasv.client.openapi.api;

import com.metasv.client.openapi.ApiException;
import com.metasv.client.openapi.model.SensibleFtBalance;
import com.metasv.client.openapi.model.SensibleFtUtxo;
import com.metasv.client.openapi.model.SensibleNftAuctionUtxo;
import com.metasv.client.openapi.model.SensibleNftSellUtxo;
import com.metasv.client.openapi.model.SensibleNftUtxo;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SensibleApi
 */
@Ignore
public class SensibleApiTest {

    private final SensibleApi api = new SensibleApi();

    
    /**
     * Get all sensible token balances for specific address.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sensibleFtAddressAddressBalanceGetTest() throws ApiException {
        String address = null;
        String codeHash = null;
        String genesis = null;
        List<SensibleFtBalance> response = api.sensibleFtAddressAddressBalanceGet(address, codeHash, genesis);

        // TODO: test validations
    }
    
    /**
     * Get all sensible token utxos for specific address.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sensibleFtAddressAddressUtxoGetTest() throws ApiException {
        String address = null;
        String codeHash = null;
        String genesis = null;
        String flag = null;
        List<SensibleFtUtxo> response = api.sensibleFtAddressAddressUtxoGet(address, codeHash, genesis, flag);

        // TODO: test validations
    }
    
    /**
     * Get all sensible nft token utxos for specific address.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sensibleNftAddressAddressUtxoGetTest() throws ApiException {
        String address = null;
        String codeHash = null;
        String genesis = null;
        String flag = null;
        List<SensibleNftUtxo> response = api.sensibleNftAddressAddressUtxoGet(address, codeHash, genesis, flag);

        // TODO: test validations
    }
    
    /**
     * Get all sensible nft token utxos by codeHash and genesisId.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sensibleNftAuctionCodeHashCodeHashNftIdNftIdUtxoGetTest() throws ApiException {
        String codeHash = null;
        String nftId = null;
        List<SensibleNftAuctionUtxo> response = api.sensibleNftAuctionCodeHashCodeHashNftIdNftIdUtxoGet(codeHash, nftId);

        // TODO: test validations
    }
    
    /**
     * Get all sensible nft token utxos by codeHash and genesisId.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sensibleNftGenesisCodeHashGenesisUtxoGetTest() throws ApiException {
        String codeHash = null;
        String genesis = null;
        Long tokenIndex = null;
        Long max = null;
        Long min = null;
        List<SensibleNftUtxo> response = api.sensibleNftGenesisCodeHashGenesisUtxoGet(codeHash, genesis, tokenIndex, max, min);

        // TODO: test validations
    }
    
    /**
     * Get all sensible sell sell utxos for specific address.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sensibleNftSellAddressAddressUtxoGetTest() throws ApiException {
        String address = null;
        String codeHash = null;
        String genesis = null;
        String flag = null;
        List<SensibleNftSellUtxo> response = api.sensibleNftSellAddressAddressUtxoGet(address, codeHash, genesis, flag);

        // TODO: test validations
    }
    
    /**
     * Get all sensible nft token utxos by codeHash and genesisId.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sensibleNftSellGenesisCodeHashGenesisUtxoGetTest() throws ApiException {
        String codeHash = null;
        String genesis = null;
        Long tokenIndex = null;
        Long max = null;
        Long min = null;
        List<SensibleNftSellUtxo> response = api.sensibleNftSellGenesisCodeHashGenesisUtxoGet(codeHash, genesis, tokenIndex, max, min);

        // TODO: test validations
    }
    
}
